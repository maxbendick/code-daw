[{"/home/max/projects/daw/code-daw/src/editor/ZoneBackground.tsx":"1","/home/max/projects/daw/code-daw/src/components/Editor/index.tsx":"2","/home/max/projects/daw/code-daw/src/reportWebVitals.ts":"3","/home/max/projects/daw/code-daw/src/editor/ZoneContentContainer.tsx":"4","/home/max/projects/daw/code-daw/src/components/Editor/code.ts":"5","/home/max/projects/daw/code-daw/src/editor/add-decorations.tsx":"6","/home/max/projects/daw/code-daw/src/components/App/index.tsx":"7","/home/max/projects/daw/code-daw/src/editor/add-content-widget.tsx":"8","/home/max/projects/daw/code-daw/src/index.tsx":"9","/home/max/projects/daw/code-daw/src/editor/add-view-zone.tsx":"10","/home/max/projects/daw/code-daw/src/editor/load-files.ts":"11","/home/max/projects/daw/code-daw/src/editor/cool-zone.tsx":"12","/home/max/projects/daw/code-daw/src/components/Editor/TextZone.tsx":"13","/home/max/projects/daw/code-daw/src/editor/add-highlighting.ts":"14","/home/max/projects/daw/code-daw/src/editor/chain.ts":"15","/home/max/projects/daw/code-daw/src/editor/compilation/compilation.ts":"16","/home/max/projects/daw/code-daw/src/lib/signals.ts":"17","/home/max/projects/daw/code-daw/src/connection/imports.ts":"18","/home/max/projects/daw/code-daw/src/lib/signal.ts":"19","/home/max/projects/daw/code-daw/src/lib/interactables.ts":"20","/home/max/projects/daw/code-daw/src/connection/bus.ts":"21","/home/max/projects/daw/code-daw/src/lib/_subscription.ts":"22","/home/max/projects/daw/code-daw/src/editor/parsing/ts-parser.ts":"23","/home/max/projects/daw/code-daw/src/editor/parsing/regex.ts":"24","/home/max/projects/daw/code-daw/src/editor/finished-loading-listeners.ts":"25","/home/max/projects/daw/code-daw/src/lifecycle/machine.ts":"26","/home/max/projects/daw/code-daw/src/lifecycle/init.ts":"27","/home/max/projects/daw/code-daw/src/components/Editor/setuppers.ts":"28","/home/max/projects/daw/code-daw/src/config.ts":"29","/home/max/projects/daw/code-daw/src/lifecycle/use-service.ts":"30","/home/max/projects/daw/code-daw/src/editor/instances.ts":"31"},{"size":316,"mtime":1606272032322,"results":"32","hashOfConfig":"33"},{"size":1662,"mtime":1606887651181,"results":"34","hashOfConfig":"33"},{"size":416,"mtime":1606423985060,"results":"35","hashOfConfig":"33"},{"size":357,"mtime":1606272045892,"results":"36","hashOfConfig":"33"},{"size":4284,"mtime":1606598338681,"results":"37","hashOfConfig":"33"},{"size":876,"mtime":1606877801513,"results":"38","hashOfConfig":"33"},{"size":612,"mtime":1606079510813,"results":"39","hashOfConfig":"33"},{"size":1785,"mtime":1606877669319,"results":"40","hashOfConfig":"33"},{"size":505,"mtime":1606874580918,"results":"41","hashOfConfig":"33"},{"size":1352,"mtime":1606877755479,"results":"42","hashOfConfig":"33"},{"size":4807,"mtime":1606456058058,"results":"43","hashOfConfig":"33"},{"size":2162,"mtime":1606877811226,"results":"44","hashOfConfig":"33"},{"size":1204,"mtime":1606595492429,"results":"45","hashOfConfig":"33"},{"size":1125,"mtime":1606587273404,"results":"46","hashOfConfig":"33"},{"size":688,"mtime":1606533326999,"results":"47","hashOfConfig":"33"},{"size":2883,"mtime":1606886813918,"results":"48","hashOfConfig":"33"},{"size":2138,"mtime":1606861735414,"results":"49","hashOfConfig":"33"},{"size":1342,"mtime":1606595503732,"results":"50","hashOfConfig":"33"},{"size":1106,"mtime":1606861735409,"results":"51","hashOfConfig":"33"},{"size":3293,"mtime":1606861735369,"results":"52","hashOfConfig":"33"},{"size":3088,"mtime":1606587780177,"results":"53","hashOfConfig":"33"},{"size":332,"mtime":1606861735349,"results":"54","hashOfConfig":"33"},{"size":3351,"mtime":1606595529278,"results":"55","hashOfConfig":"33"},{"size":958,"mtime":1606589778907,"results":"56","hashOfConfig":"33"},{"size":308,"mtime":1606595523019,"results":"57","hashOfConfig":"33"},{"size":3215,"mtime":1606887677456,"results":"58","hashOfConfig":"33"},{"size":2778,"mtime":1606874424068,"results":"59","hashOfConfig":"33"},{"size":1959,"mtime":1606886971690,"results":"60","hashOfConfig":"33"},{"size":132,"mtime":1606438571305,"results":"61","hashOfConfig":"33"},{"size":460,"mtime":1606875210337,"results":"62","hashOfConfig":"33"},{"size":623,"mtime":1606877857615,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"m6yky6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/max/projects/daw/code-daw/src/editor/ZoneBackground.tsx",[],["131","132"],"/home/max/projects/daw/code-daw/src/components/Editor/index.tsx",[],"/home/max/projects/daw/code-daw/src/reportWebVitals.ts",[],["133","134"],"/home/max/projects/daw/code-daw/src/editor/ZoneContentContainer.tsx",[],"/home/max/projects/daw/code-daw/src/components/Editor/code.ts",[],"/home/max/projects/daw/code-daw/src/editor/add-decorations.tsx",[],"/home/max/projects/daw/code-daw/src/components/App/index.tsx",[],"/home/max/projects/daw/code-daw/src/editor/add-content-widget.tsx",[],"/home/max/projects/daw/code-daw/src/index.tsx",[],"/home/max/projects/daw/code-daw/src/editor/add-view-zone.tsx",[],"/home/max/projects/daw/code-daw/src/editor/load-files.ts",["135","136","137","138"],"/home/max/projects/daw/code-daw/src/editor/cool-zone.tsx",[],"/home/max/projects/daw/code-daw/src/components/Editor/TextZone.tsx",[],"/home/max/projects/daw/code-daw/src/editor/add-highlighting.ts",[],"/home/max/projects/daw/code-daw/src/editor/chain.ts",[],"/home/max/projects/daw/code-daw/src/editor/compilation/compilation.ts",["139"],"/home/max/projects/daw/code-daw/src/lib/signals.ts",["140"],"import { Signal } from './signal'\nimport { Number_, SignalLike } from './utility-types'\n\nconst _sine = (freq: number, phase: number, t: number): number => 0\nconst _square = (freq: number, phase: number, t: number): number => 0\nconst _triangle = (freq: number, phase: number, t: number): number => 0\n\nexport const of = <A>(a: A): Signal<A> => new Signal(set => set(a))\n\nexport const from = <A>(a: SignalLike<A>): Signal<A> =>\n  ((a as any) as Signal<A>)._signal\n    ? ((a as any) as Signal<A>)\n    : (of(a) as Signal<A>)\n\nexport const add = (a: Number_, b: Number_): Signal<number> =>\n  combineMap((x, y) => x + y, from(a), from(b))\n\nexport const mult = (a: Number_, b: Number_): Signal<number> =>\n  combineMap((x, y) => x * y, from(a), from(b))\n// static periodic = (f: (freq: number, phase: number, t: number) => number) => (\n//   freqHz: Hz_,\n//   phase?: Phase_\n// ): Signal<number> => {\n//   const safeHz = Signals.from(freqHz);\n//   const safePhase = Signals.from(phase ?? 0);\n//   return Signals.combine3(\n//     (freq, phase, tick) => f(freq, phase, tick),\n//     safeHz,\n//     safePhase,\n//     SignalTransport.tick\n//   );\n// };\n\nexport const periodic = (...args: any) => (...args: any) => of(1)\n\nexport const sine = (...args: any) => of(1) // Signals.periodic(sine);\n\nexport const triangle = periodic(_triangle)\n\nexport const square = periodic(_square)\n\nexport const map = <A, B>(f: (a: A) => B, a: Signal<A>) =>\n  new Signal<B>(set => a._subscribe(() => set(f(a._curr))))\n\nexport const combineMap = <A, B, C>(\n  f: (a: A, b: B) => C,\n  a: Signal<A>,\n  b: Signal<B>\n): Signal<C> => {\n  return new Signal(set => {\n    const setForCurrentVals = () => set(f(a._curr, b._curr))\n    const subA = a._stealthSubscribe(setForCurrentVals)\n    const subB = b._stealthSubscribe(setForCurrentVals)\n    setForCurrentVals()\n    return subA.combine(subB)\n  })\n}\n\nexport const combine3 = <A, B, C, D>(\n  f: (a: A, b: B, c: C) => D,\n  a: Signal<A>,\n  b: Signal<B>,\n  c: Signal<C>\n): Signal<D> => {\n  return null as any\n}\n\nexport const pair = <A, B>(a: Signal<A>, b: Signal<B>): Signal<[A, B]> => {\n  return combineMap((a, b) => [a, b], a, b)\n}\n","/home/max/projects/daw/code-daw/src/connection/imports.ts",["141"],"/home/max/projects/daw/code-daw/src/lib/signal.ts",[],"/home/max/projects/daw/code-daw/src/lib/interactables.ts",["142","143","144","145","146","147"],"import { AudioSignal } from './audio-signal'\nimport { DialConfig, _DialInteractable, _Interactable } from './interactable'\nimport { MidiSignal } from './midi-signal'\nimport { Signal } from './signal'\nimport * as Signals from './signals'\n\ninterface Bus<SendT, ReceiveT> {\n  send: (message: SendT) => void\n  receive: (f: (message: ReceiveT) => void) => void\n  destroy: () => void\n  destroyed: boolean\n  // TODO add onDestroyed?\n}\n\ntype _DialSignal<A> = Signal<A> & {\n  _interactable: _DialInteractable\n}\n\ntype _InteractableSignal<A> = Signal<A> & _Interactable\ntype _InteractableAudioSignal = AudioSignal & _Interactable\ntype _InteractableMidiSignal = MidiSignal & _Interactable\n\n/** mutate `into` to includ props of b and c */\nconst assignInto = <\n  A,\n  B extends { [k: string]: any },\n  C extends { [k: string]: any } = any\n>(\n  into: A,\n  b: B,\n  c?: C,\n): A & B & C => {\n  for (const kb of Object.keys(b)) {\n    ;(into as any)[kb] = b[kb]\n  }\n  if (c) {\n    for (const kc of Object.keys(c)) {\n      ;(into as any)[kc] = b[kc]\n    }\n  }\n  return into as any\n}\n\nlet nextDialIndex = 0\n\n// const graph = new SignalGraph()\n\nconst exampleSignalConsumer = (source: Signal<number>): Signal<number> => {\n  const self = {\n    ...source,\n  }\n\n  // const node: DialNode = {\n  //   nodeType: NodeType.Dial,\n  //   inputs: {},\n  //   output: source,\n  //   config: { start: 0, end: 100, defaultValue: 50 },\n  // }\n\n  // graph.addNode({\n  //   nodeType: NodeType.Dial,\n  //   inputs: {},\n  //   output: source,\n  //   config: { start: 0, end: 100, defaultValue: 50 },\n  // })\n\n  // graph.addEdge({\n  //   input\n  // })\n\n  return source\n}\n\n/**\n * dial doesn't reference graph because it has no inputs\n */\nexport const dial: (config: DialConfig) => Signal<number> = config => {\n  const { defaultValue } = config\n  const dialIndex = nextDialIndex++\n  const bus: Bus<any, any> = (window as any).buses?.dials?.[dialIndex]\n\n  if (!bus) {\n    console.warn('no bus registered for dial', dialIndex)\n  } else {\n    bus.receive(message => {\n      console.log(`dial ${dialIndex} received message:`, message)\n    })\n  }\n\n  const signal = Signals.of(defaultValue)\n\n  signal._interactable = {\n    _index: dialIndex,\n    _bus: bus,\n    _type: 'dial' as const,\n    _dial: true as const,\n    _config: config,\n    _compiledLineNumber: (window as any).codeDawCurrentLineNumber,\n  }\n\n  return signal\n}\n\nexport const polySine: (\n  midiSignal: MidiSignal,\n) => _InteractableAudioSignal = () => null as any\n\nexport const toggle: (config: {\n  default: boolean\n}) => _InteractableSignal<boolean> = () => null as any\n\ntype MixerInputConfig = unknown\ninterface MixerInputs {\n  [name: string]: AudioSignal | MixerInputConfig\n}\n\nexport const mixer: (inputs: MixerInputs) => _InteractableAudioSignal = () =>\n  null as any\n\nconst show: <A>(a: A) => A = null as any // shows a UI element when it otherwise wouldn't be shown, like when a dial is referenced\n\n/*\n  Show buttons in UI\n  API?\n*/\nexport const switcher = <\n  A extends number | string | { label: string | number }\n>(\n  options: Iterable<A>,\n): _InteractableSignal<A> => {\n  return null as any\n}\n\n// const dropdown = switcher; // could include another style\n\nexport const _interactables_exports = {\n  packageName: 'code-daw/interactables' as const,\n  content: {\n    dial,\n  },\n}\n","/home/max/projects/daw/code-daw/src/connection/bus.ts",[],"/home/max/projects/daw/code-daw/src/lib/_subscription.ts",["148"],"export type _SubscriptionLike =\n  | void\n  | null\n  | undefined\n  | (() => void)\n  | _Subscription\n\nexport class _Subscription {\n  constructor(subscriptionLike?: _SubscriptionLike) {\n    // TODO make this right\n  }\n\n  unsubscribe = (): void => {}\n\n  combine = (other: _Subscription): _Subscription => {\n    return null as any\n  }\n}\n","/home/max/projects/daw/code-daw/src/editor/parsing/ts-parser.ts",["149"],"/home/max/projects/daw/code-daw/src/editor/parsing/regex.ts",["150"],"/home/max/projects/daw/code-daw/src/editor/finished-loading-listeners.ts",[],"/home/max/projects/daw/code-daw/src/lifecycle/machine.ts",[],"/home/max/projects/daw/code-daw/src/lifecycle/init.ts",[],"/home/max/projects/daw/code-daw/src/components/Editor/setuppers.ts",[],"/home/max/projects/daw/code-daw/src/config.ts",[],"/home/max/projects/daw/code-daw/src/lifecycle/use-service.ts",[],"/home/max/projects/daw/code-daw/src/editor/instances.ts",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"151","replacedBy":"155"},{"ruleId":"153","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":60,"column":7,"nodeType":"159","messageId":"160","endLine":60,"endColumn":21},{"ruleId":"157","severity":1,"message":"161","line":67,"column":7,"nodeType":"159","messageId":"160","endLine":67,"endColumn":14},{"ruleId":"157","severity":1,"message":"162","line":68,"column":7,"nodeType":"159","messageId":"160","endLine":68,"endColumn":16},{"ruleId":"157","severity":1,"message":"163","line":84,"column":7,"nodeType":"159","messageId":"160","endLine":84,"endColumn":17},{"ruleId":"157","severity":1,"message":"164","line":7,"column":7,"nodeType":"159","messageId":"160","endLine":7,"endColumn":15},{"ruleId":"157","severity":1,"message":"165","line":4,"column":7,"nodeType":"159","messageId":"160","endLine":4,"endColumn":12},{"ruleId":"166","severity":1,"message":"167","line":9,"column":3,"nodeType":"168","messageId":"169","endLine":9,"endColumn":7},{"ruleId":"157","severity":1,"message":"170","line":15,"column":6,"nodeType":"159","messageId":"160","endLine":15,"endColumn":17},{"ruleId":"157","severity":1,"message":"171","line":21,"column":6,"nodeType":"159","messageId":"160","endLine":21,"endColumn":29},{"ruleId":"157","severity":1,"message":"172","line":24,"column":7,"nodeType":"159","messageId":"160","endLine":24,"endColumn":17},{"ruleId":"157","severity":1,"message":"173","line":48,"column":7,"nodeType":"159","messageId":"160","endLine":48,"endColumn":28},{"ruleId":"157","severity":1,"message":"174","line":49,"column":9,"nodeType":"159","messageId":"160","endLine":49,"endColumn":13},{"ruleId":"157","severity":1,"message":"175","line":120,"column":7,"nodeType":"159","messageId":"160","endLine":120,"endColumn":27},{"ruleId":"176","severity":1,"message":"177","line":9,"column":3,"nodeType":"178","messageId":"179","endLine":11,"endColumn":4},{"ruleId":"180","severity":1,"message":"181","line":53,"column":16,"nodeType":"182","messageId":"169","endLine":53,"endColumn":18},{"ruleId":"157","severity":1,"message":"183","line":25,"column":7,"nodeType":"159","messageId":"160","endLine":25,"endColumn":30},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],["184"],["185"],"@typescript-eslint/no-unused-vars","'addFileExample' is assigned a value but never used.","Identifier","unusedVar","'toLines' is assigned a value but never used.","'fromLines' is assigned a value but never used.","'addDtsFile' is assigned a value but never used.","'testCode' is assigned a value but never used.","'_sine' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'_DialSignal' is defined but never used.","'_InteractableMidiSignal' is defined but never used.","'assignInto' is assigned a value but never used.","'exampleSignalConsumer' is assigned a value but never used.","'self' is assigned a value but never used.","'show' is assigned a value but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'varTokenAssignmentRegex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
[{"/home/max/projects/daw/code-daw/src/editor/ZoneBackground.tsx":"1","/home/max/projects/daw/code-daw/src/components/Editor/index.tsx":"2","/home/max/projects/daw/code-daw/src/reportWebVitals.ts":"3","/home/max/projects/daw/code-daw/src/editor/ZoneContentContainer.tsx":"4","/home/max/projects/daw/code-daw/src/components/Editor/code.ts":"5","/home/max/projects/daw/code-daw/src/editor/add-decorations.tsx":"6","/home/max/projects/daw/code-daw/src/components/App/index.tsx":"7","/home/max/projects/daw/code-daw/src/editor/add-content-widget.tsx":"8","/home/max/projects/daw/code-daw/src/index.tsx":"9","/home/max/projects/daw/code-daw/src/editor/add-view-zone.tsx":"10","/home/max/projects/daw/code-daw/src/editor/load-files.ts":"11","/home/max/projects/daw/code-daw/src/editor/cool-zone.tsx":"12","/home/max/projects/daw/code-daw/src/components/Editor/TextZone.tsx":"13","/home/max/projects/daw/code-daw/src/editor/add-highlighting.ts":"14","/home/max/projects/daw/code-daw/src/editor/chain.ts":"15","/home/max/projects/daw/code-daw/src/editor/compilation/compilation.ts":"16","/home/max/projects/daw/code-daw/src/connection/imports.ts":"17","/home/max/projects/daw/code-daw/src/connection/bus.ts":"18","/home/max/projects/daw/code-daw/src/editor/parsing/ts-parser.ts":"19","/home/max/projects/daw/code-daw/src/editor/parsing/regex.ts":"20","/home/max/projects/daw/code-daw/src/editor/finished-loading-listeners.ts":"21","/home/max/projects/daw/code-daw/src/lifecycle/machine.ts":"22","/home/max/projects/daw/code-daw/src/config.ts":"23","/home/max/projects/daw/code-daw/src/editor/instances.ts":"24","/home/max/projects/daw/code-daw/src/lifecycle/services.ts":"25","/home/max/projects/daw/code-daw/src/lib2/priv/signal-graph.ts":"26","/home/max/projects/daw/code-daw/src/lib2/priv/makeNodeMaker.ts":"27","/home/max/projects/daw/code-daw/src/runtime/runtime.ts":"28","/home/max/projects/daw/code-daw/src/runtime/easy-connect.ts":"29","/home/max/projects/daw/code-daw/src/runtime/utils.ts":"30","/home/max/projects/daw/code-daw/src/components/Editor/FreqZone.tsx":"31","/home/max/projects/daw/code-daw/src/components/Editor/DialZone.tsx":"32","/home/max/projects/daw/code-daw/src/lib2/priv/no-sig-types/edge-types.ts":"33","/home/max/projects/daw/code-daw/src/lib2/priv/nodes/io/master-out.ts":"34","/home/max/projects/daw/code-daw/src/lib2/priv/nodes/oscillators/sine.ts":"35","/home/max/projects/daw/code-daw/src/lib2/priv/nodes/interactables/dial.ts":"36","/home/max/projects/daw/code-daw/src/lib2/priv/all-nodes.ts":"37"},{"size":316,"mtime":1606272032322,"results":"38","hashOfConfig":"39"},{"size":1341,"mtime":1606944279051,"results":"40","hashOfConfig":"39"},{"size":416,"mtime":1606423985060,"results":"41","hashOfConfig":"39"},{"size":357,"mtime":1606272045892,"results":"42","hashOfConfig":"39"},{"size":4446,"mtime":1606974588710,"results":"43","hashOfConfig":"39"},{"size":876,"mtime":1606877801513,"results":"44","hashOfConfig":"39"},{"size":612,"mtime":1606079510813,"results":"45","hashOfConfig":"39"},{"size":1785,"mtime":1606877669319,"results":"46","hashOfConfig":"39"},{"size":505,"mtime":1606874580918,"results":"47","hashOfConfig":"39"},{"size":1352,"mtime":1606877755479,"results":"48","hashOfConfig":"39"},{"size":4807,"mtime":1606456058058,"results":"49","hashOfConfig":"39"},{"size":2803,"mtime":1606973101146,"results":"50","hashOfConfig":"39"},{"size":1396,"mtime":1606958234639,"results":"51","hashOfConfig":"39"},{"size":1220,"mtime":1606890932799,"results":"52","hashOfConfig":"39"},{"size":688,"mtime":1606533326999,"results":"53","hashOfConfig":"39"},{"size":2955,"mtime":1607025484119,"results":"54","hashOfConfig":"39"},{"size":1858,"mtime":1607039005861,"results":"55","hashOfConfig":"39"},{"size":2979,"mtime":1606891447457,"results":"56","hashOfConfig":"39"},{"size":3358,"mtime":1606889708501,"results":"57","hashOfConfig":"39"},{"size":958,"mtime":1606589778907,"results":"58","hashOfConfig":"39"},{"size":308,"mtime":1606595523019,"results":"59","hashOfConfig":"39"},{"size":4187,"mtime":1607029983392,"results":"60","hashOfConfig":"39"},{"size":132,"mtime":1606438571305,"results":"61","hashOfConfig":"39"},{"size":623,"mtime":1606877857615,"results":"62","hashOfConfig":"39"},{"size":3048,"mtime":1606961125872,"results":"63","hashOfConfig":"39"},{"size":1741,"mtime":1607039197905,"results":"64","hashOfConfig":"39"},{"size":2071,"mtime":1607039917188,"results":"65","hashOfConfig":"39"},{"size":4606,"mtime":1607037269449,"results":"66","hashOfConfig":"39"},{"size":956,"mtime":1607032828373,"results":"67","hashOfConfig":"39"},{"size":2179,"mtime":1607029746245,"results":"68","hashOfConfig":"39"},{"size":1509,"mtime":1606960970521,"results":"69","hashOfConfig":"39"},{"size":3966,"mtime":1606973027122,"results":"70","hashOfConfig":"39"},{"size":685,"mtime":1606798815199,"results":"71","hashOfConfig":"39"},{"size":1071,"mtime":1607039811866,"results":"72","hashOfConfig":"39"},{"size":2010,"mtime":1607044215389,"results":"73","hashOfConfig":"39"},{"size":1113,"mtime":1607039746966,"results":"74","hashOfConfig":"39"},{"size":1544,"mtime":1607044358252,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"m6yky6",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/max/projects/daw/code-daw/src/editor/ZoneBackground.tsx",[],["158","159"],"/home/max/projects/daw/code-daw/src/components/Editor/index.tsx",[],"/home/max/projects/daw/code-daw/src/reportWebVitals.ts",[],["160","161"],"/home/max/projects/daw/code-daw/src/editor/ZoneContentContainer.tsx",[],"/home/max/projects/daw/code-daw/src/components/Editor/code.ts",[],["162","163"],"/home/max/projects/daw/code-daw/src/editor/add-decorations.tsx",[],"/home/max/projects/daw/code-daw/src/components/App/index.tsx",[],"/home/max/projects/daw/code-daw/src/editor/add-content-widget.tsx",[],"/home/max/projects/daw/code-daw/src/index.tsx",[],"/home/max/projects/daw/code-daw/src/editor/add-view-zone.tsx",[],"/home/max/projects/daw/code-daw/src/editor/load-files.ts",["164","165","166","167"],"/home/max/projects/daw/code-daw/src/editor/cool-zone.tsx",[],"/home/max/projects/daw/code-daw/src/components/Editor/TextZone.tsx",[],"/home/max/projects/daw/code-daw/src/editor/add-highlighting.ts",[],"/home/max/projects/daw/code-daw/src/editor/chain.ts",[],"/home/max/projects/daw/code-daw/src/editor/compilation/compilation.ts",["168"],"/home/max/projects/daw/code-daw/src/connection/imports.ts",["169"],"// where am I???\n// import from a honeypot?\n\nimport { alertFinishedLoadingListeners } from '../editor/finished-loading-listeners'\nimport { superDefs } from '../lib2/priv/all-nodes'\nimport { BaseSuperDef } from '../lib2/priv/no-sig-types/super-def'\nimport { _interactables_exports } from '../lib2/priv/nodes/interactables/dial'\nimport { _io_exports } from '../lib2/priv/nodes/io/master-out'\n\nexport const evalCompiledUserCode = (code: string) => {\n  ;(window as any).codeDawInEval = true\n  eval(code)\n  ;(window as any).codeDawInEval = false\n\n  console.log(\n    'from window!',\n    (window as any).codeDawVars.firstDial._interactable,\n  )\n\n  alertFinishedLoadingListeners()\n}\n\ninterface RegisterArgs {\n  packageName: string // `code-daw/${string}`\n  content: any\n}\n\nconst registerExports = ({ packageName, content }: RegisterArgs) => {\n  // Don't do in eval\n  if ((window as any).codeDawInEval) {\n    return\n  }\n\n  const w = window as any\n  if (!w.codeDawPackages) {\n    w.codeDawPackages = {}\n  }\n  if (!w.codeDawPackages[packageName]) {\n    w.codeDawPackages[packageName] = {}\n  }\n\n  w.codeDawPackages[packageName] = {\n    ...w.codeDawPackages[packageName],\n    ...content,\n  }\n}\n\nconst registerSuperDef = (superDef: BaseSuperDef) => {\n  registerExports({\n    packageName: superDef.packageName,\n    content: {\n      [superDef.publicName]: superDef.publicFunction,\n    },\n  })\n}\n\nexport const registerAllExports = () => {\n  registerExports(_interactables_exports)\n  registerExports(_io_exports)\n\n  for (const def of superDefs) {\n    registerSuperDef(def)\n  }\n}\n\n// `require` in compiled user code becomes `codeDawRequire`\nexport const codeDawRequire = (packageName: string): any => {\n  if (!packageName.startsWith('code-daw/')) {\n    throw new Error(`Evil bad require for package: ${packageName}`)\n  }\n  return (window as any).codeDawPackages[packageName]\n}\n",["170","171"],"/home/max/projects/daw/code-daw/src/connection/bus.ts",[],"/home/max/projects/daw/code-daw/src/editor/parsing/ts-parser.ts",["172"],"/home/max/projects/daw/code-daw/src/editor/parsing/regex.ts",["173"],"export const tokens = [\n  'dial',\n  'mixer',\n  'polySine',\n  'switcher',\n  'toggle',\n] as const\n\nconst varNameGroup = `(\\\\w+)`\n\nconst lookBehindConstAssignment = `(?<=(const ${varNameGroup} = ))`\n\nconst lookBehindVarAssignment = `(?<=(var ${varNameGroup} = ))`\n\nconst tokenGroup = `(${tokens.map(t => `(${t})`).join('|')})`\n\nconst lookAheadFnCall = `(?=\\\\()`\n\nexport const constTokenAssignmentRegex = new RegExp(\n  `${lookBehindConstAssignment}${tokenGroup}${lookAheadFnCall}`,\n  'g',\n)\n\n// TODO brittle\nconst varTokenAssignmentRegex = new RegExp(\n  `${lookBehindVarAssignment}(interactables_1\\\\.)${tokenGroup}${lookAheadFnCall}`,\n  'g',\n)\n\n// export const compiledTokenVarNameRegex = new RegExp(\n//   `(?<=(var ))\\\\w+(?=( = (interactables_1\\\\.)))`,\n//   'g',\n// )\n\n// TODO brittle\nexport const compiledTokenVarNameRegex = new RegExp(\n  `(?<=(var ))\\\\w+(?=( = (interactables_1\\\\.${tokenGroup}\\\\()))`,\n  'g',\n)\n\n// (?<=(\\nvar ))(\\w+)(?=( = interactables_1.))\n","/home/max/projects/daw/code-daw/src/editor/finished-loading-listeners.ts",[],"/home/max/projects/daw/code-daw/src/lifecycle/machine.ts",[],"/home/max/projects/daw/code-daw/src/config.ts",[],"/home/max/projects/daw/code-daw/src/editor/instances.ts",[],"/home/max/projects/daw/code-daw/src/lifecycle/services.ts",[],"/home/max/projects/daw/code-daw/src/lib2/priv/signal-graph.ts",["174"],"/home/max/projects/daw/code-daw/src/lib2/priv/makeNodeMaker.ts",["175","176","177","178"],"import { NodeType } from './all-nodes'\nimport { StringKeys } from './no-sig-types/string-keys'\nimport { BaseSuperDef } from './no-sig-types/super-def'\nimport { globalSignalGraph, Node } from './signal-graph'\n\n// TODO\n// const isInteractable = (t: NodeType) => getGraphNodeDefinition(t).interactable\n\ntype SigTypeInputsOf<G> = any\n// type SigTypeInputsOf<G extends GraphNodeEphemeral> = {\n//   [k in keyof InputsOf<G>]: InputsOf<G>[k] extends 'signal'\n//     ? Signal<any>\n//     : InputsOf<G>[k] extends 'audioSignal'\n//     ? AudioSignal\n//     : InputsOf<G>[k] extends 'midiSignal'\n//     ? MidiSignal\n//     : never\n// }\n\nexport type NodeConstructor<G> = any\n// export type NodeConstructor<G extends GraphNodeEphemeral> = {\n//   type: NodeTypeOf<G>\n//   inputs: SigTypeInputsOf<G> // InputsOf<G> //\n//   config: ConfigOf<G>\n// }\n\nexport type SuperNodeConstructor<Def extends BaseSuperDef> = {\n  // type: Def['nodeType']\n  // inputs: Def['inputs']\n  // config: SuperConfig<Def>\n  type: any\n  inputs: any\n  config: any\n}\n\ntype SignalMakerInjected = {\n  id: string\n}\n\nconst nodeTypeToNextIndex = new Map<NodeType, number>()\n\nconst incrGetIndex = (t: NodeType) => {\n  const currIndex = nodeTypeToNextIndex.get(t) ?? 0\n  nodeTypeToNextIndex.set(t, currIndex + 1)\n  return currIndex\n}\n\nexport const makeNodeMaker = <Args extends any[]>(\n  f: (injected: SignalMakerInjected, ...args: Args) => NodeConstructor<any>,\n) => {\n  return (...args: Args): Node<any> => {\n    const id = Math.random().toString(36).substring(7)\n\n    const injected: SignalMakerInjected = { id }\n\n    const { type, inputs, config } = f(injected, ...args)\n\n    const index = incrGetIndex(type as NodeType)\n\n    const inputIds: StringKeys<string> = {}\n    for (const [k, v] of Object.entries(inputs)) {\n      inputIds[k] = ((v as any) as Node<any>).id!\n    }\n\n    let result: Node<any> = {\n      id,\n      type,\n      inputIds,\n      config,\n      index,\n      lastObservedCompiledLineNumber: (window as any).codeDawCurrentLineNumber,\n    }\n\n    globalSignalGraph.addNode(result)\n\n    return result\n  }\n}\n","/home/max/projects/daw/code-daw/src/runtime/runtime.ts",["179","180","181"],"/home/max/projects/daw/code-daw/src/runtime/easy-connect.ts",[],"/home/max/projects/daw/code-daw/src/runtime/utils.ts",[],"/home/max/projects/daw/code-daw/src/components/Editor/FreqZone.tsx",[],"/home/max/projects/daw/code-daw/src/components/Editor/DialZone.tsx",["182"],"/home/max/projects/daw/code-daw/src/lib2/priv/no-sig-types/edge-types.ts",["183"],"export type EdgeType = 'signal' | 'audioSignal' | 'midiSignal'\nexport const EdgeType = {\n  Signal: 'signal' as const,\n  AudioSignal: 'audioSignal' as const,\n  MidiSignal: 'midiSignal' as const,\n}\n\n// export type EdgeToSigT<EdgeType> = EdgeType extends typeof EdgeType.Signal\n//   ? Signal<any>\n//   : EdgeType extends typeof EdgeType.AudioSignal\n//   ? AudioSignal\n//   : EdgeType extends typeof EdgeType.MidiSignal\n//   ? MidiSignal\n//   : never\n\n// export type SigToEdgeType<SigT> = SigT extends Signal<any>\n//   ? typeof EdgeType.Signal\n//   : SigT extends AudioSignal\n//   ? typeof EdgeType.AudioSignal\n//   : SigT extends MidiSignal\n//   ? typeof EdgeType.MidiSignal\n//   : never\n","/home/max/projects/daw/code-daw/src/lib2/priv/nodes/io/master-out.ts",[],"/home/max/projects/daw/code-daw/src/lib2/priv/nodes/oscillators/sine.ts",[],"/home/max/projects/daw/code-daw/src/lib2/priv/nodes/interactables/dial.ts",[],"/home/max/projects/daw/code-daw/src/lib2/priv/all-nodes.ts",["184","185","186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"187","replacedBy":"191"},{"ruleId":"189","replacedBy":"192"},{"ruleId":"187","replacedBy":"193"},{"ruleId":"189","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":60,"column":7,"nodeType":"197","messageId":"198","endLine":60,"endColumn":21},{"ruleId":"195","severity":1,"message":"199","line":67,"column":7,"nodeType":"197","messageId":"198","endLine":67,"endColumn":14},{"ruleId":"195","severity":1,"message":"200","line":68,"column":7,"nodeType":"197","messageId":"198","endLine":68,"endColumn":16},{"ruleId":"195","severity":1,"message":"201","line":84,"column":7,"nodeType":"197","messageId":"198","endLine":84,"endColumn":17},{"ruleId":"195","severity":1,"message":"202","line":7,"column":7,"nodeType":"197","messageId":"198","endLine":7,"endColumn":15},{"ruleId":"203","severity":1,"message":"204","line":12,"column":3,"nodeType":"205","messageId":"206","endLine":12,"endColumn":7},{"ruleId":"187","replacedBy":"207"},{"ruleId":"189","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":53,"column":16,"nodeType":"211","messageId":"206","endLine":53,"endColumn":18},{"ruleId":"195","severity":1,"message":"212","line":25,"column":7,"nodeType":"197","messageId":"198","endLine":25,"endColumn":30},{"ruleId":"195","severity":1,"message":"213","line":66,"column":18,"nodeType":"197","messageId":"198","endLine":66,"endColumn":21},{"ruleId":"195","severity":1,"message":"214","line":9,"column":6,"nodeType":"197","messageId":"198","endLine":9,"endColumn":21},{"ruleId":"195","severity":1,"message":"215","line":9,"column":22,"nodeType":"197","messageId":"198","endLine":9,"endColumn":23},{"ruleId":"195","severity":1,"message":"215","line":20,"column":29,"nodeType":"197","messageId":"198","endLine":20,"endColumn":30},{"ruleId":"195","severity":1,"message":"213","line":27,"column":34,"nodeType":"197","messageId":"198","endLine":27,"endColumn":37},{"ruleId":"195","severity":1,"message":"216","line":51,"column":11,"nodeType":"197","messageId":"198","endLine":51,"endColumn":19},{"ruleId":"195","severity":1,"message":"217","line":51,"column":21,"nodeType":"197","messageId":"198","endLine":51,"endColumn":35},{"ruleId":"195","severity":1,"message":"218","line":134,"column":15,"nodeType":"197","messageId":"198","endLine":134,"endColumn":17},{"ruleId":"219","severity":1,"message":"220","line":117,"column":6,"nodeType":"221","endLine":117,"endColumn":13,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":2,"column":14,"nodeType":"197","messageId":"225","endLine":2,"endColumn":22},{"ruleId":"195","severity":1,"message":"226","line":24,"column":7,"nodeType":"197","messageId":"198","endLine":24,"endColumn":38},{"ruleId":"195","severity":1,"message":"227","line":26,"column":6,"nodeType":"197","messageId":"198","endLine":26,"endColumn":14},{"ruleId":"195","severity":1,"message":"228","line":27,"column":6,"nodeType":"197","messageId":"198","endLine":27,"endColumn":22},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],["229"],["230"],["229"],["230"],"@typescript-eslint/no-unused-vars","'addFileExample' is assigned a value but never used.","Identifier","unusedVar","'toLines' is assigned a value but never used.","'fromLines' is assigned a value but never used.","'addDtsFile' is assigned a value but never used.","'testCode' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected",["229"],["230"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'varTokenAssignmentRegex' is assigned a value but never used.","'Def' is defined but never used.","'SigTypeInputsOf' is defined but never used.","'G' is defined but never used.","'toMaster' is assigned a value but never used.","'makeOscillator' is assigned a value but never used.","'id' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'send'. Either include it or remove the dependency array. If 'send' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["231"],"@typescript-eslint/no-redeclare","'EdgeType' is already defined.","redeclared","'_proof' is assigned a value but never used.","'SuperDef' is defined but never used.","'SuperDefNodeType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},"Update the dependencies array to be: [send, value]",{"range":"234","text":"235"},[2857,2864],"[send, value]"]
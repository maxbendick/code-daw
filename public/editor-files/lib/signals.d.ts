import { Signal } from './signal';
import { Number_, SignalLike } from './utility-types';
export declare const of: <A>(a: A) => Signal<A>;
export declare const from: <A>(a: SignalLike<A>) => Signal<A>;
export declare const add: (a: Number_, b: Number_) => Signal<number>;
export declare const mult: (a: Number_, b: Number_) => Signal<number>;
export declare const periodic: (...args: any) => (...args: any) => Signal<number>;
export declare const sine: (...args: any) => Signal<number>;
export declare const triangle: (...args: any) => Signal<number>;
export declare const square: (...args: any) => Signal<number>;
export declare const map: <A, B>(f: (a: A) => B, a: Signal<A>) => Signal<B>;
export declare const combineMap: <A, B, C>(f: (a: A, b: B) => C, a: Signal<A>, b: Signal<B>) => Signal<C>;
export declare const combine3: <A, B, C, D>(f: (a: A, b: B, c: C) => D, a: Signal<A>, b: Signal<B>, c: Signal<C>) => Signal<D>;
export declare const pair: <A, B>(a: Signal<A>, b: Signal<B>) => Signal<[A, B]>;
